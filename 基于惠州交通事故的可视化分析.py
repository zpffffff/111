# -*- coding: utf-8 -*-
"""
惠州市交通事故数据预处理脚本
功能：数据清洗、缺失值处理、异常值标注
输入文件：惠州市交通事故数据.csv（需与本脚本同目录）
输出文件：cleaned_惠州交通事故数据.csv
"""

import pandas as pd
import numpy as np

# ----------------------
# 1. 数据加载与初步诊断
# ----------------------
try:
    # 跳过第二行单位说明（行索引从0开始）
    df = pd.read_csv('C:/Users/86158/Desktop/惠州市交通事故数据.csv', skiprows=[1], encoding='gbk')

    # 重命名字段（去除单位说明）
    df.columns = [
        '年份', '全市死亡人数', '全市损失折款（万元）',
        '惠阳区死亡人数', '惠城区死亡人数', '龙门县死亡人数',
        '惠东县死亡人数', '博罗县死亡人数', '大亚湾区死亡人数',
        '市辖区死亡人数', '仲恺高新区死亡人数'
    ]

    print("数据加载成功！原始数据维度:", df.shape)

except Exception as e:
    print(f"文件读取失败，请检查文件路径或格式: {str(e)}")
    exit()

# ----------------------
# 2. 数据清洗
# ----------------------
# 2.1 处理早期区域数据缺失（2011年前未分区统计）
# 将2011年及之前的区县数据标记为"未统计"
district_columns = [
    '惠阳区死亡人数', '惠城区死亡人数', '龙门县死亡人数',
    '惠东县死亡人数', '博罗县死亡人数', '大亚湾区死亡人数',
    '市辖区死亡人数', '仲恺高新区死亡人数'
]

# 先转换为字符串类型以便存储文本
df[district_columns] = df[district_columns].astype(str)

# 标记未统计年份
df.loc[df['年份'] <= 2011, district_columns] = '未统计'

# 2.2 处理全市损失折款缺失（使用线性插值）
# 将损失折款转换为数值类型
df['全市损失折款（万元）'] = pd.to_numeric(df['全市损失折款（万元）'], errors='coerce')

# 使用线性插值填充缺失值
df['全市损失折款（万元）'] = df['全市损失折款（万元）'].interpolate(method='linear')

# 2.3 标注2017年异常高损失数据
df['备注'] = np.where(
    df['年份'] == 2017,
    '异常高损失（建议核实数据）',
    ''
)

# ----------------------
# 3. 数据保存
# ----------------------
try:
    df.to_csv('cleaned_惠州交通事故数据.csv', index=False, encoding='utf-8-sig')
    print("清洗后数据已保存为：cleaned_惠州交通事故数据.csv")
except Exception as e:
    print(f"文件保存失败: {str(e)}")

# ----------------------
# 4. 生成预处理报告
# ----------------------
original_count = len(df)
cleaned_count = len(df.dropna())  # 实际未删除行，此处统计有效数据量
# 计算各区县之和
df['各区县死亡人数总和'] = df[
    ['惠城区死亡人数', '惠阳区死亡人数', '龙门县死亡人数',
     '惠东县死亡人数', '博罗县死亡人数', '大亚湾区死亡人数',
     '仲恺高新区死亡人数']
].sum(axis=1)

# 验证是否与全市死亡人数一致
if not (df['各区县死亡人数总和'] == df['全市死亡人数']).all():
    print("⚠️ 数据不一致：各区县死亡人数之和不等于全市死亡人数")
else:
    print("✅ 数据一致性验证通过")
report = f"""
>>> 数据预处理报告 <<<

[基本统计]
原始数据记录数：{original_count} 条（{df['年份'].min()}~{df['年份'].max()}年）
有效数据记录数：{cleaned_count} 条

[主要处理步骤]
1. 字段标准化：重命名含单位说明的列
2. 缺失值处理：
   - 2011年及以前区县数据标注为"未统计"
   - 全市损失折款缺失值使用线性插值填充（2013-2015年）
3. 异常值标注：2017年损失折款添加备注
4. 数据类型转换：确保数值列正确类型

[注意事项]
- 2011年前区县数据缺失是原始数据收集问题
- 2017年损失折款异常需联系数据提供方确认
"""
print(report)